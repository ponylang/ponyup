name: PR

on: pull_request

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  superlinter:
    name: Lint bash, docker, markdown, and yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint codebase
        uses: docker://github/super-linter:v3.8.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_BASH: true
          VALIDATE_DOCKERFILE: true
          VALIDATE_MD: true
          VALIDATE_YAML: true

  validate-docker-image-builds:
    name: Validate Docker image builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: "docker build --pull ."

  verify-changelog:
    name: Verify CHANGELOG is valid
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ponylang/changelog-tool:release
    steps:
      - uses: actions/checkout@v3
      - name: Verify CHANGELOG
        run: changelog-tool verify

  linux:
    name: Verify PR builds on Linux with most recent ponyc release
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ponylang/shared-docker-ci-x86-64-unknown-linux-builder-with-libressl-3.7.2:release
    steps:
      - uses: actions/checkout@v3
      - name: Test with the most recent ponyc release
        run: make test

  alpine-bootstrap:
    name: Test bootstrapping on Alpine
    runs-on: ubuntu-latest
    container:
        image: docker://ghcr.io/ponylang/ponyup-ci-alpine-bootstrap-tester:20230830
    steps:
      - uses: actions/checkout@v3
      - name: Bootstrap test
        run: SSL=0.9.0 .ci-scripts/test-bootstrap.sh

  ubuntu20_04-bootstrap:
    name: Test bootstrapping on Ubuntu 20.04
    runs-on: ubuntu-latest
    container:
        image: docker://ghcr.io/ponylang/ponyup-ci-ubuntu20.04-bootstrap-tester:20230830
    steps:
      - uses: actions/checkout@v3
      - name: Bootstrap test
        run: .ci-scripts/test-bootstrap.sh

  ubuntu22_04-bootstrap:
    name: Test bootstrapping on Ubuntu 22.04
    runs-on: ubuntu-latest
    container:
        image: docker://ghcr.io/ponylang/ponyup-ci-ubuntu22.04-bootstrap-tester:20230830
    steps:
      - uses: actions/checkout@v3
      - name: Bootstrap test
        run: SSL=3.0.x .ci-scripts/test-bootstrap.sh

  # This won't pass until we have a few ponyc versions that have macos on intel
  # and we update the versions we test with. This is off for now.
  # macos:
  #   name: Verify PR builds on x86-64 macOS with most recent ponyc release
  #   runs-on: macos-13
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: install pony tools
  #       run: bash .ci-scripts/macOS-x86-install-pony-tools.bash release
  #     - name: Test with the most recent ponyc release
  #       run: |
  #         export PATH="/tmp/corral/bin:/tmp/ponyc/bin/:$PATH"
  #         make test

  x86-64-macos-bootstrap:
    name: Test bootstrapping on macOS x86-64
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        # libressl gets installed but is returning a non-zero exit code,
        # so we have to soldier on through the stupidity
        continue-on-error: true
        run: |
          brew update
          brew install libressl
      - name: Bootstrap test
        run: SSL=0.9.0 .ci-scripts/test-bootstrap.sh

  windows:
    name: Verify PR builds with most recent ponyc release on Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Test with most recent ponyc release
        run: |
          Invoke-WebRequest https://dl.cloudsmith.io/public/ponylang/releases/raw/versions/latest/ponyc-x86-64-pc-windows-msvc.zip -OutFile C:\ponyc.zip;
          Expand-Archive -Path C:\ponyc.zip -DestinationPath C:\ponyc;
          Invoke-WebRequest https://dl.cloudsmith.io/public/ponylang/releases/raw/versions/latest/corral-x86-64-pc-windows-msvc.zip -OutFile C:\corral.zip;
          Expand-Archive -Path C:\corral.zip -DestinationPath C:\ponyc;
          $env:PATH = 'C:\ponyc\bin;' + $env:PATH;
          .\make.ps1 -Command fetch 2>&1
          .\make.ps1 -Command build 2>&1
          .\make.ps1 -Command test 2>&1
